- name: label node with RTLSDR dongle for rtlsdr-airband
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        labels:
          airband: "usb"
        name: "{{ airband_alt_node }}"

- name: Deploy rtlsdr-airband
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: rtlsdr-airband
        namespace: default
        labels:
          app: rtlsdr-airband
      spec:
        replicas: 1
        strategy:
          type: Recreate
        selector:
          matchLabels:
            app: rtlsdr-airband
        template:
          metadata:
            labels:
              app: rtlsdr-airband
          spec:
            nodeSelector:
              airband: usb
            containers:
            - name: rtlsdr-airband
              image: "{{ airband_image }}"
              imagePullPolicy: Always
              securityContext:
                privileged: true
              env:
              - name: ICECAST_ADMIN_PASSWORD
                value: "{{ airband_admin_password }}"
              - name: RTLSDRAIRBAND_CUSTOMCONFIG
                value: "true"
              - name: ICECAST_HOSTNAME
                value: "{{ airband_alt_hostname }}"
              volumeMounts:
              - mountPath: /run/rtlsdr-airband
                name: readsb-run
                subPath: rtlsdr-airband-alt
              - mountPath: /dev/bus/
                name: usb
            volumes:
            - name: readsb-run
              persistentVolumeClaim:
                claimName: readsb-run
            - name: usb
              hostPath:
                path: /dev/bus/

- name: Deploy icecast service
  k8s:
    state: "{{ workload_state }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: rtlsdr-airband
        namespace : default
      spec:
        loadBalancerIP: "{{ airband_alt_ip }}"
        selector:
          app: rtlsdr-airband
        ports:
        - protocol: TCP
          port: "{{ airband_port }}"
          targetPort: 8000
          name : output
        type: LoadBalancer 
