
---
- name: Label node with RTLSDR dongle for ACARS Hub
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        labels:
          acarshub: "usb"
        name: "{{ acars_node }}"

- name: Deploy acarsdec
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: acarsdec
        namespace: adsb
        labels:
          app: acarsdec
      spec:
        replicas: 1
        strategy:
          type: Recreate
        selector:
          matchLabels:
            app: acarsdec
        template:
          metadata:
            labels:
              app: acarsdec
          spec:
            hostname: "acarsdec"
            nodeSelector:
              acarshub: usb
            containers:
            - name: acarsdec
              image: "ghcr.io/sdr-enthusiasts/docker-acarsdec:latest"
              imagePullPolicy: Always
              securityContext:
                privileged: true
              env:
              - name: TZ
                value: "{{ timezone }}"
              - name: QUIET_LOGS
                value: ""
              - name: SERIAL
                value: "{{ acarshub_serial_acars }}"
              - name: GAIN
                value: "-10"
              - name: PPM
                value: "0"
              - name: FREQUENCIES
                value : "130.025;130.450;131.125;131.550"
              - name: FEED_ID
                value: "{{ acarshub_stationid_acars }}"
              - name: SERVER
                value: "192.168.31.226"
              volumeMounts:
              - mountPath: /dev/bus/
                name: usb
            volumes:
            - name: usb
              hostPath:
                path: /dev/bus/

- name: Deploy dumpvdl2
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: dumpvdl2
        namespace: adsb
        labels:
          app: dumpvdl2
      spec:
        replicas: 1
        strategy:
          type: Recreate
        selector:
          matchLabels:
            app: dumpvdl2
        template:
          metadata:
            labels:
              app: dumpvdl2
          spec:
            hostname: "dumpvdl2"
            nodeSelector:
              acarshub: usb
            containers:
            - name: dumpvdl2
              image: "ghcr.io/sdr-enthusiasts/docker-dumpvdl2:latest"
              imagePullPolicy: Always
              securityContext:
                privileged: true
              env:
              - name: TZ
                value: "{{ timezone }}"
              - name: QUIET_LOGS
                value: ""
              - name: SERIAL
                value: "{{ acarshub_serial_vdlm }}"
              - name: GAIN
                value: "400"
              - name: PPM
                value: "0"
              - name: FREQUENCIES
                value : "136650000;136700000;136975000;136925000;136800000"
              - name: FEED_ID
                value: "{{ acarshub_stationid_vdlm }}"
              - name: SERVER
                value: "192.168.31.226"
              - name: VDLM_FILTER_ENABLE
                value: "false"
              volumeMounts:
              - mountPath: /dev/bus/
                name: usb
            volumes:
            - name: usb
              hostPath:
                path: /dev/bus/

- name: Deploy ACARS Hub
  k8s:
    state: "{{ workload_state }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: acarshub
        namespace: adsb
        labels:
          app: acarshub
      spec:
        replicas: 1
        strategy:
          type: Recreate
        selector:
          matchLabels:
            app: acarshub
        template:
          metadata:
            labels:
              app: acarshub
          spec:
            hostname: "{{ acarshub_host }}"
            containers:
            - name: acarshub
              image: "ghcr.io/sdr-enthusiasts/docker-acarshub:latest"
              imagePullPolicy: Always
              securityContext:
                privileged: true
              env:
              - name: TZ
                value: "{{ timezone }}"
              - name: ENABLE_VDLM
                value: "external"
              - name: ENABLE_ACARS
                value: "external"
              - name: ENABLE_WEB
                value: "true"
              - name: FEED
                value: "true"
              - name: QUIET_LOGS
                value: ""
              - name: DEBUG_LOGGING
                value: "true"
              - name: EXTREME_LOGGING
                value: ""
              - name: DB_SAVEALL
                value: ""
              - name: TAR1090_URL
                value: "tar1090"
              - name: IATA_OVERRIDE
                value: "UP|UPS|United Parcel Service;GS|FTH|Mountain Aviation (Foothills)"
              - name: ENABLE_ADSB
                value: "true"
              - name: ADSB_LAT
                value: "{{ lat }}"
              - name: ADSB_LON
                value: "{{ lon }}"
              - name: ADSB_URL
                value: "http://{{ tar1090_host }}/data/aircraft.json"
              volumeMounts:
              - mountPath: /run/acars
                name: acarshub-volume
                subPath: acars
              - mountPath: /dev/bus/
                name: usb
            volumes:
            - name: acarshub-volume
              persistentVolumeClaim:
                claimName: acarshub-pvc
            - name: usb
              hostPath:
                path: /dev/bus/

- name: Deploy ACARS Hub Service Web
  k8s:
    state: "{{ workload_state }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "{{ acarshub_host }}-web"
        namespace: adsb
        annotations:
          metallb.universe.tf/allow-shared-ip: shared-ip
      spec:
        loadBalancerIP: "{{ acarshub_ip }}"
        selector:
          app: acarshub
        ports:
        - protocol: TCP
          port: 80
          targetPort: 80
          name : output
        type: LoadBalancer

- name: Deploy ACARS Hub Service UDP
  k8s:
    state: "{{ workload_state }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "{{ acarshub_host }}-udp"
        namespace: adsb
        annotations:
          metallb.universe.tf/allow-shared-ip: shared-ip
      spec:
        loadBalancerIP: "{{ acarshub_ip }}"
        selector:
          app: acarshub
        ports:
        - protocol: UDP
          port: 5555
          targetPort: 5555
          name: vdlm
        - protocol: UDP
          port: 5550
          targetPort: 5550
          name: acars
        type: LoadBalancer

- name: acarsdec service
  k8s:
    state: "{{ workload_state }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: "acarsdec"
        namespace: adsb
        annotations:
          metallb.universe.tf/allow-shared-ip: shared-ip
      spec:
        loadBalancerIP: "192.168.31.228"
        selector:
          app: acarsdec
        ports:
        - protocol: TCP
          port: 15550
          targetPort: 15550
          name: vdlm
        type: LoadBalancer
